# vim: ft=dockerfile
FROM tda283/tester

# Nix needs an user-writable /nix
USER root
RUN mkdir /nix
RUN chown user /nix
# Install nix
USER user
RUN curl -L https://nixos.org/nix/install | sh
# Manually set up nix variables, since the .profile doesn't get sourced here
ENV PATH="/home/user/.nix-profile/bin:${PATH}"
ENV NIX_PATH="${NIX_PATH:+$NIX_PATH:}/home/user/.nix-defexpr/channels"
ENV NIX_SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
ENV NIX_PROFILES="/nix/var/nix/profiles/default /home/user/.nix-profile"
# Make an helper file that defines riscv cross compilation
RUN echo 'let hostPkgs = import <nixpkgs> {}; \
    in import <nixpkgs> \
    { crossSystem = hostPkgs.lib.systems.examples.riscv64-embedded; }' \
    > riscv.nix
# Install x86 spike, cross gcc, and riscv pk
RUN nix-env -i -A nixpkgs.spike
RUN nix-env -i -f riscv.nix -A pkgsBuildHost.gcc
RUN nix-env -i -f riscv.nix -A pkgsHostTarget.riscv-pk

WORKDIR /home/user/tda283/tester
CMD /bin/bash
